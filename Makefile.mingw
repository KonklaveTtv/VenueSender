# Makefile for VenueSender project using the MingGW-w64 cross-compiler

# Detect the OS type
UNAME_S := $(shell uname -s)

# Compiler and flags for MinGW-w64
CXX = x86_64-w64-mingw32-g++
CXXFLAGS = -std=c++20 -Wall -Wextra -Isrc/include -Isrc -I/mingw64/include
LDFLAGS = -static-libgcc -static-libstdc++ -L/mingw64/lib

# Directories
SRCDIR = src
OBJDIR = obj
BINDIR = bin

# Targets
TARGET = $(BINDIR)/VenueSender.exe

# Source files
SRCS = $(wildcard $(SRCDIR)/*.cpp)

# Object files
OBJS = $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.o, $(SRCS))

# Static Libraries for cross-compilation (replace with Windows versions)
# Note: You will need to cross-compile these or obtain the Windows versions.
STATIC_LIBS = -lcurl \
              -lpsl \
              -ljsoncpp \
              -lssl \
              -lcrypto \
              -lz \
              -lsqlite3 \
              -lboost_system-mt \
              -lboost_filesystem-mt \
              -lboost_iostreams-mt \
              -lboost_regex-mt

# Compile rules
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Default target
all: directories $(TARGET)

# Create necessary directories
directories:
	mkdir -p $(OBJDIR)
	mkdir -p $(BINDIR)

# Link the main executable
$(TARGET): $(OBJS)
	$(CXX) $(CXXFLAGS) -o $@ $(OBJS) $(LDFLAGS) $(STATIC_LIBS)

# Clean up
clean:
	rm -rf $(OBJDIR) $(BINDIR)

.PHONY: all directories clean
